- name: Demo stopping a Windows service
  hosts: all
  gather_facts: false
  vars:
    demo_win_service: "Spooler"
  tasks:
    - name: Get service status
      ansible.windows.win_service_info:
        name: "{{ demo_win_service }}"
      register: service_info

    - name: Show service status
      ansible.builtin.debug:
        msg:
          - "Service '{{ service_info.services[0].name }}'"
          - "State: {{ service_info.services[0].state }}"
          - "Username: {{ service_info.services[0].username }}"
      when: service_info.services | length > 0

    - name: Stop the specified service
      ansible.windows.win_service:
        name: "{{ demo_win_service }}"
        state: stopped

    - name: Get service status again
      ansible.windows.win_service_info:
        name: "{{ demo_win_service }}"
      register: service_info

    - name: Show service status again
      ansible.builtin.debug:
        msg:
          - "Service '{{ service_info.services[0].name }}'"
          - "State: {{ service_info.services[0].state }}"
          - "Username: {{ service_info.services[0].username }}"
      when: service_info.services | length > 0

    - name: Start the specified service
      ansible.windows.win_service:
        name: "{{ demo_win_service }}"
        state: started

    - name: Get service status yet again
      ansible.windows.win_service_info:
        name: "{{ demo_win_service }}"
      register: service_info

    - name: Show service status yet again
      ansible.builtin.debug:
        msg:
          - "Service '{{ service_info.services[0].name }}'"
          - "State: {{ service_info.services[0].state }}"
          - "Username: {{ service_info.services[0].username }}"
      when: service_info.services | length > 0

    - name: Get all services
      ansible.windows.win_service_info:
      register: service_info

    - name: Mimic powershell search for services "Get-CIMInstance -Class Win32_Service -filter "StartName != 'LocalSystem' AND NOT StartName LIKE 'NT Authority%' " | Select-Object SystemName, Name, Caption, StartMode, StartName, State | Sort-Object StartName"
      ansible.builtin.set_fact:
        custom_services_list: "{{ filtered_and_mapped_services | sort(attribute='StartName') }}"
      vars:
        # This block now filters and maps the data in a single loop
        filtered_and_mapped_services: >-
          {%- set results = [] -%}
          {%- for service in service_info.services -%}
            {%- if service.username is defined
                and service.username | lower != 'localsystem'
                and not (service.username | lower).startswith('nt authority') -%}
              {%- set _ = results.append({
                  'SystemName': inventory_hostname,
                  'Name': service.name,
                  'Caption': service.display_name,
                  'StartMode': service.start_mode,
                  'StartName': service.username,
                  'State': service.state
                }) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ results }}

    - name: Display the custom list
      ansible.builtin.debug:
        var: custom_services_list

...
