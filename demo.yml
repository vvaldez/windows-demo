- name: Demo stopping a Windows service
  hosts: all
  gather_facts: false
  vars:
    demo_win_service: "Spooler"
  tasks:
    - name: Get service status
      ansible.windows.win_service_info:
        name: "{{ demo_win_service }}"
      register: service_info

    - name: Show service status
      ansible.builtin.debug:
        msg:
          - "Service '{{ service_info.services[0].name }}'"
          - "State: {{ service_info.services[0].state }}"
          - "Username: {{ service_info.services[0].username }}"
      when: service_info.services | length > 0

    - name: Stop the specified service
      ansible.windows.win_service:
        name: "{{ demo_win_service }}"
        state: stopped

    - name: Get service status again
      ansible.windows.win_service_info:
        name: "{{ demo_win_service }}"
      register: service_info

    - name: Show service status again
      ansible.builtin.debug:
        msg:
          - "Service '{{ service_info.services[0].name }}'"
          - "State: {{ service_info.services[0].state }}"
          - "Username: {{ service_info.services[0].username }}"
      when: service_info.services | length > 0

    - name: Start the specified service
      ansible.windows.win_service:
        name: "{{ demo_win_service }}"
        state: started

    - name: Get service status yet again
      ansible.windows.win_service_info:
        name: "{{ demo_win_service }}"
      register: service_info

    - name: Show service status yet again
      ansible.builtin.debug:
        msg:
          - "Service '{{ service_info.services[0].name }}'"
          - "State: {{ service_info.services[0].state }}"
          - "Username: {{ service_info.services[0].username }}"
      when: service_info.services | length > 0

    - name: Get all services
      ansible.windows.win_service_info:
      register: all_services_info

    - name: Mimic powershell search for services "Get-CIMInstance -Class Win32_Service -filter "StartName != 'LocalSystem' AND NOT StartName LIKE 'NT Authority%' " | Select-Object SystemName, Name, Caption, StartMode, StartName, State | Sort-Object StartName"
      ansible.builtin.set_fact:
        custom_services_list: >-
          {{
            all_services_info
            | community.general.json_query(jmespath_query)
            | sort(attribute='StartName')
          }}
      vars:
        jmespath_query: >-
          services
          [?username && username != 'LocalSystem' && !starts_with(username, 'NT Authority')]
          .{
            SystemName: machine_name,
            Name: name,
            Caption: display_name,
            StartMode: start_mode,
            StartName: username,
            State: state
          }

    - name: 3. Display the final list
      ansible.builtin.debug:
        var: custom_services_list

...
